{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xf01Ff8eF6dCF00dEabF3d73211c2d6077b47ABCF",
    "txHash": "0xf58ff4bd816bd7ff8d16206ee044bb35f520d4fccfd8f66dfc2f8af3c2024823",
    "deployTransaction": {
      "hash": "0xf58ff4bd816bd7ff8d16206ee044bb35f520d4fccfd8f66dfc2f8af3c2024823",
      "type": 2,
      "accessList": [],
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0xC2e6EA11CE034e63fc79274192CB2a823BBCfD21",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x59682f04"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x59682ee7"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x59682f04"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 1,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x9e6d645fe2e43068fe0bae9b9da1b4754ddaf2df3b8e66ac9810203303249b1c",
      "s": "0x1b09505ea7ea29076f3ec311affc74571dcfc872b01f6adc1a1d16d3462d5a1e",
      "v": 1,
      "creates": "0xf01Ff8eF6dCF00dEabF3d73211c2d6077b47ABCF",
      "chainId": 4
    }
  },
  "proxies": [
    {
      "address": "0x6a465ce82e0E6ccA65C8FA4A8e792dd06b9C0381",
      "txHash": "0x77a6c8fe5ed8842be6a4f8b03ca9f066cf3739b886226f3c293a86da70218521",
      "kind": "transparent"
    },
    {
      "address": "0x0B3E4A623d1c68AE0Ac996782b55Dabbf9A02A70",
      "txHash": "0x8b91df6356fdfdb15f64a752ddc703dabcf2b45548ff1d3e4f1ed92b85fd291b",
      "kind": "transparent"
    }
  ],
  "impls": {
    "f9f0097f145e3f4839c74cac925d2eadf8cc29d3fbf5f5d1ce3dbd2df601bc1e": {
      "address": "0x8Aeb11455C8CC83C02BA23F039BFcc01227998BF",
      "txHash": "0x5a6fb699e32edd1802a198a6309fffd9535c793aab0d28ec72c229cad03964d9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:24"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:76"
          },
          {
            "contract": "HeroContract",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "contracts\\hero.sol:13"
          },
          {
            "contract": "HeroContract",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "contracts\\hero.sol:14"
          },
          {
            "contract": "HeroContract",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "contracts\\hero.sol:15"
          },
          {
            "contract": "HeroContract",
            "label": "_tokenIds",
            "type": "t_struct(Counter)1644_storage",
            "src": "contracts\\hero.sol:33"
          },
          {
            "contract": "HeroContract",
            "label": "heroes",
            "type": "t_array(t_struct(Hero)2362_storage)dyn_storage",
            "src": "contracts\\hero.sol:42"
          },
          {
            "contract": "HeroContract",
            "label": "heroToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\hero.sol:44"
          },
          {
            "contract": "HeroContract",
            "label": "ownerHeroCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\hero.sol:45"
          },
          {
            "contract": "HeroContract",
            "label": "heroApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\hero.sol:46"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)1644_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_struct(Hero)2362_storage)dyn_storage": {
            "label": "struct HeroContract.Hero[]"
          },
          "t_struct(Hero)2362_storage": {
            "label": "struct HeroContract.Hero",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "patk",
                "type": "t_uint256"
              },
              {
                "label": "readyTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "88b3b66ab3331eef883e3741a4aade98ab3f25db1a75765debb6457e91b44f4d": {
      "address": "0x6516d57eBc77cb0140a3680A029c23061185d6d5",
      "txHash": "0xf1c4645cdecc95a9d66601ef234d7f3789545643e37120bf9a324fd7a5bbdf66",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:24"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:76"
          },
          {
            "contract": "HeroContract",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "contracts\\hero.sol:13"
          },
          {
            "contract": "HeroContract",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "contracts\\hero.sol:14"
          },
          {
            "contract": "HeroContract",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "contracts\\hero.sol:15"
          },
          {
            "contract": "HeroContract",
            "label": "_tokenIds",
            "type": "t_struct(Counter)1644_storage",
            "src": "contracts\\hero.sol:33"
          },
          {
            "contract": "HeroContract",
            "label": "heroes",
            "type": "t_array(t_struct(Hero)2362_storage)dyn_storage",
            "src": "contracts\\hero.sol:42"
          },
          {
            "contract": "HeroContract",
            "label": "heroToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\hero.sol:44"
          },
          {
            "contract": "HeroContract",
            "label": "ownerHeroCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\hero.sol:45"
          },
          {
            "contract": "HeroContract",
            "label": "heroApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\hero.sol:46"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)1644_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_struct(Hero)2362_storage)dyn_storage": {
            "label": "struct HeroContract.Hero[]"
          },
          "t_struct(Hero)2362_storage": {
            "label": "struct HeroContract.Hero",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "patk",
                "type": "t_uint256"
              },
              {
                "label": "readyTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a35cbfcf0f009774ad3305854d9f6202f0c0e1689d37904d06911551a760cd6c": {
      "address": "0x118e69A77B29b2Fb11faAa560C44E17679229707",
      "txHash": "0xbe1df22e238b04a2b43002c936171021bf49c1d439187b985688126bd3be075e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:24"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:76"
          },
          {
            "contract": "HeroContract",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "contracts\\hero.sol:13"
          },
          {
            "contract": "HeroContract",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "contracts\\hero.sol:14"
          },
          {
            "contract": "HeroContract",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "contracts\\hero.sol:15"
          },
          {
            "contract": "HeroContract",
            "label": "_tokenIds",
            "type": "t_struct(Counter)1644_storage",
            "src": "contracts\\hero.sol:33"
          },
          {
            "contract": "HeroContract",
            "label": "heroes",
            "type": "t_array(t_struct(Hero)2362_storage)dyn_storage",
            "src": "contracts\\hero.sol:42"
          },
          {
            "contract": "HeroContract",
            "label": "heroToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\hero.sol:44"
          },
          {
            "contract": "HeroContract",
            "label": "ownerHeroCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\hero.sol:45"
          },
          {
            "contract": "HeroContract",
            "label": "heroApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\hero.sol:46"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)1644_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_struct(Hero)2362_storage)dyn_storage": {
            "label": "struct HeroContract.Hero[]"
          },
          "t_struct(Hero)2362_storage": {
            "label": "struct HeroContract.Hero",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "patk",
                "type": "t_uint256"
              },
              {
                "label": "readyTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "735d51ef9dea23093c84e735d899fa5fe406e7ecc31529ad31053c46d8919923": {
      "address": "0x37281811bB608393D4F92fa8b3777DA645896e28",
      "txHash": "0x7633047767160153cc40c2ca6b9d09bff01fa75d84781f538209fda6eb466227",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:24"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:76"
          },
          {
            "contract": "HeroContract",
            "label": "dnaDigits",
            "type": "t_uint256",
            "src": "contracts\\hero.sol:13"
          },
          {
            "contract": "HeroContract",
            "label": "dnaModulus",
            "type": "t_uint256",
            "src": "contracts\\hero.sol:14"
          },
          {
            "contract": "HeroContract",
            "label": "cooldownTime",
            "type": "t_uint256",
            "src": "contracts\\hero.sol:15"
          },
          {
            "contract": "HeroContract",
            "label": "_tokenIds",
            "type": "t_struct(Counter)1644_storage",
            "src": "contracts\\hero.sol:33"
          },
          {
            "contract": "HeroContract",
            "label": "heroes",
            "type": "t_array(t_struct(Hero)2362_storage)dyn_storage",
            "src": "contracts\\hero.sol:42"
          },
          {
            "contract": "HeroContract",
            "label": "heroToOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\hero.sol:44"
          },
          {
            "contract": "HeroContract",
            "label": "ownerHeroCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\hero.sol:45"
          },
          {
            "contract": "HeroContract",
            "label": "heroApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\hero.sol:46"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)1644_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_struct(Hero)2362_storage)dyn_storage": {
            "label": "struct HeroContract.Hero[]"
          },
          "t_struct(Hero)2362_storage": {
            "label": "struct HeroContract.Hero",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "dna",
                "type": "t_uint256"
              },
              {
                "label": "patk",
                "type": "t_uint256"
              },
              {
                "label": "readyTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
